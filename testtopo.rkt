#lang racket

(require "datalog.rkt")
(require "semi-naive.rkt")

(define P (set 
  (:- #(R5) #(L1))
  (:- #(R5) #(L1) #(R12))

  (:- #(R6) #(L2))
  (:- #(R6) #(L2) #(R10))
  
  (:- #(R7) #(L3))
  (:- #(R7) #(L4) #(R11))
  (:- #(R7) #(L3) #(R13))

  (:- #(R8) #(L4))
  (:- #(R8) #(L3) #(R5))
  (:- #(R8) #(L4) #(R12))

  (:- #(R9) #(L1) #(R6))

  (:- #(R10) #(L4) #(R6))
  (:- #(R10) #(L3) #(R9))

  (:- #(R11) #(L2) #(R7))

  (:- #(R12) #(L2) #(R8))

  (:- #(R13) #(L1) #(R11))
))

(solve-semi-naive P (set #(L1) #(L2) #(L3) #(L4)))

